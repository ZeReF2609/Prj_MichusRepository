@{
    Layout = "~/Views/Shared/layoutVentaEcommerce.cshtml";
    ViewData["Title"] = "Reservas";
}

<!-- Custom CSS with the provided color palette -->
<style>
    :root {
        --primary-color: #6F29B5;
        --secondary-color: #513012;
        --accent-color: #8E5739;
        --light-color: #D9C7F2;
        --highlight-color: #A478D4;
    }

    body {
        background-color: var(--light-color);
    }

    .reservation-container {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 30px;
        margin-top: 20px;
    }

    .form-label {
        color: var(--secondary-color);
        font-weight: 600;
    }

    .mesa-card {
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .mesa-card.selected {
        border-color: var(--primary-color);
        background-color: rgba(111, 41, 181, 0.05);
    }

    .mesa-card i {
        color: var(--accent-color);
        transition: transform 0.3s ease;
    }

    .mesa-card input[type="radio"] {
        display: none;
    }

    .btn-confirm {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        transition: all 0.3s ease;
    }

    .btn-confirm:hover {
        background-color: var(--highlight-color);
        border-color: var(--highlight-color);
        transform: translateY(-2px);
    }
</style>

<!-- External Libraries -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css" />

<div class="container reservation-container">
    <div class="row">
        <div class="col-12">
            <h2 class="my-4 text-center" style="color: var(--secondary-color)">Realizar Reserva</h2>

            <form id="formReserva" novalidate>
                <!-- Email Input with Enhanced Validation -->
                <div class="mb-3">
                    <label for="correoElectronico" class="form-label">Correo Electrónico</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                        <input type="email" class="form-control" id="correoElectronico" 
                               placeholder="ejemplo@correo.com"                                 
                               required />
                        <div class="invalid-feedback">
                            Por favor, ingrese un correo electrónico válido.
                        </div>
                    </div>
                </div>

                <!-- Date and Time Selection -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="fechaReserva" class="form-label">Fecha de Reserva</label>
                        <input type="date" class="form-control" id="fechaReserva" 
                               min="@DateTime.Now.AddDays(0).ToString("yyyy-MM-dd")" 
                               max="@DateTime.Now.AddMonths(3).ToString("yyyy-MM-dd")" 
                               required />
                    </div>

                    <div class="col-md-6 mb-3">
                        <label for="horaReserva" class="form-label">Hora de Reserva</label>
                        <select class="form-select" id="horaReserva" required>
                            <!-- Horas will be dynamically populated -->
                        </select>
                    </div>
                </div>

                <!-- Table Selection -->
                <div class="mb-3">
                    <p class="h5">Seleccione la Mesa:</p>
                    <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4" id="mesasContainer">
                        @foreach (var mesa in ViewBag.Mesas as List<SelectListItem>)
                        {
                            <div class="col">
                                <div class="card mesa-card shadow-sm border-light rounded text-center">
                                    <div class="card-body">
                                        <input type="radio" class="mesa-radio" 
                                               id="mesa_@mesa.Value" 
                                               name="mesa" 
                                               value="@mesa.Value" 
                                               data-asientos="@mesa.Text.Split('-')[1]" />
                                        <label for="mesa_@mesa.Value" class="d-block">
                                            <i class="fas fa-chair fa-3x mb-2" title="@mesa.Text"></i>
                                            <h6 class="card-title">@mesa.Text</h6>
                                            <p class="card-text text-muted">Asientos: @mesa.Text.Split('-')[1]</p>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- People Count -->
                <div class="mb-3">
                    <label for="cantidadPersonas" class="form-label">Cantidad de Personas</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-users"></i></span>
                        <input type="number" class="form-control" 
                               id="cantidadPersonas" 
                               min="1" 
                               max="12" 
                               value="1" 
                               required />
                    </div>
                </div>

                <!-- Confirmation Checkbox -->
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="confirmarCheckbox" required />
                    <label class="form-check-label" for="confirmarCheckbox">
                        Confirmo que los datos son correctos y estoy listo para hacer la reserva
                    </label>
                </div>

                <!-- Submit Button -->
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-confirm btn-primary" id="confirmarReservaBtn">
                        <i class="fas fa-check-circle"></i> Confirmar Reserva
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Enhanced Form Interaction and Validation
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('formReserva');
        const mesaRadios = document.querySelectorAll('.mesa-radio');
        const cantidadPersonasInput = document.getElementById('cantidadPersonas');
        const horaReservaSelect = document.getElementById('horaReserva');

        // Dynamic Table Selection Highlight
        mesaRadios.forEach(radio => {
            radio.addEventListener('change', function() {
                // Remove selected class from all cards
                document.querySelectorAll('.mesa-card').forEach(card => {
                    card.classList.remove('selected');
                });

                // Add selected class to the parent card
                this.closest('.mesa-card').classList.add('selected');

                // Auto-update people count based on table capacity
                const cantidadAsientos = this.getAttribute('data-asientos');
                cantidadPersonasInput.value = cantidadAsientos;
                cantidadPersonasInput.max = cantidadAsientos;
            });
        });

        // Populate Hours Dynamically with More Flexibility
        function cargarHoras() {
            const horasDisponibles = [
                { value: '10:00', display: '10:00 AM' },
                { value: '11:00', display: '11:00 AM' },
                { value: '12:00', display: '12:00 PM' },
                { value: '13:00', display: '1:00 PM' },
                { value: '14:00', display: '2:00 PM' },
                { value: '15:00', display: '3:00 PM' },
                { value: '18:00', display: '6:00 PM' },
                { value: '19:00', display: '7:00 PM' },
                { value: '20:00', display: '8:00 PM' },
                { value: '21:00', display: '9:00 PM' },
                { value: '22:00', display: '10:00 PM' }
            ];

            horasDisponibles.forEach(hora => {
                const option = document.createElement('option');
                option.value = hora.value;
                option.textContent = hora.display;
                horaReservaSelect.appendChild(option);
            });
        }

        // Form Submission with Enhanced Validation
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            event.stopPropagation();

            // Client-side validation
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return;
            }

            const correo = document.getElementById('correoElectronico').value;
            const fechaReserva = document.getElementById('fechaReserva').value;
            const horaReserva = document.getElementById('horaReserva').value;
            const mesaSeleccionada = document.querySelector('input[name="mesa"]:checked');
            const cantidadPersonas = document.getElementById('cantidadPersonas').value;

            // Detailed confirmation dialog
            alertify.confirm(
                'Confirmar Reserva',
                `Está a punto de reservar:
                - Correo: ${correo}
                - Fecha: ${fechaReserva}
                - Hora: ${horaReserva}
                - Mesa: ${mesaSeleccionada.value}
                - Personas: ${cantidadPersonas}
                
                ¿Desea continuar?`,
                function() {
                    // Reservation creation logic (similar to previous implementation)
                    fetch("/Ecommerce/CrearReserva", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({
                            correoElectronico: correo,
                            fechaReserva: new Date(fechaReserva).toISOString().split('T')[0],
                            horaReserva: horaReserva,
                            mesaID: mesaSeleccionada.value,
                            cantidadPersonas: cantidadPersonas
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alertify.success("Reserva confirmada con éxito!");
                            form.reset();
                            document.querySelectorAll('.mesa-card').forEach(card => {
                                card.classList.remove('selected');
                            });
                        } else {
                            alertify.error(data.message || "Hubo un error al crear la reserva.");
                        }
                    })
                    .catch(error => {
                        alertify.error("Error en la conexión con el servidor.");
                        console.error(error);
                    });
                },
                function() {
                    alertify.error("Reserva cancelada.");
                }
            );
        });

        // Initialize hours and form
        cargarHoras();
    });
</script>
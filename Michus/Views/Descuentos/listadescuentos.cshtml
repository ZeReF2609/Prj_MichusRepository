@model IEnumerable<Michus.Models.pa_lista_descuento_carta>

@{
    ViewData["Title"] = "Lista de Descuentos";
}

<link rel="stylesheet" href="~/assets/css/DescuentoStyle.css">

<div class="discount-manager">
    <div class="add-button-container">
        <button class="add-button open-modal">+</button>
    </div>

    <h1>Gestor de Descuentos</h1>

    @using (Html.BeginForm("listadescuentos", "Descuentos", FormMethod.Get))
    {
        <div class="nav nav-tabs" id="nav-tab" role="tablist">

            <a class="nav-link @(ViewBag.TiSitu == "PAP" ? "active pre-aprobados" : "")"
               href="@Url.Action("listadescuentos", "Descuentos", new { TI_SITU = "PAP", FECHA_INICIO = ViewBag.FechaInicio, FECHA_FIN = ViewBag.FechaFin })">
                Pre-Aprobados
            </a>

            <a class="nav-link @(ViewBag.TiSitu == "APR" ? "active aprobados" : "")"
               href="@Url.Action("listadescuentos", "Descuentos", new { TI_SITU = "APR", FECHA_INICIO = ViewBag.FechaInicio, FECHA_FIN = ViewBag.FechaFin })">
                Aprobados
            </a>

            <a class="nav-link @(ViewBag.TiSitu == "ANU" ? "active eliminados" : "")"
               href="@Url.Action("listadescuentos", "Descuentos", new { TI_SITU = "ANU", FECHA_INICIO = ViewBag.FechaInicio, FECHA_FIN = ViewBag.FechaFin })">
                Eliminados
            </a>
        </div>

        <div class="filters">
            @Html.DropDownList("FECHA_INICIO", (SelectList)ViewBag.AniosInicioDesc, "FECHA INICIO", new { @class = "form-select" })
            <br />

            @Html.DropDownList("FECHA_FIN", (SelectList)ViewBag.AniosFinDesc, "FECHA FIN", new { @class = "form-select" })
            <br />
            <button class="filter-button" type="submit">üîç</button>
        </div>
    }



    <div class="discount-cards">
        @foreach (var item in Model.Select((value, index) => new { value, index }))
        {
            <div class="discount-card" data-modal-id="modal_@item.index" data-discount-id="@item.value.IdDescuento">
                <div class="discount-header">
                    <span class="discount-badge">
                        @if (item.value.TipoDescuento == 1)
                        {
                            @($"s/. {item.value.PrecioDescuento}")
                        }
                        else
                        {
                            @($"{item.value.PrecioDescuento}%")
                        }
                    </span>

                    @if (item.value.TiSitu != "PAP" && item.value.TiSitu != "ANU")
                    {
                        <div class="toggle">
                            <input type="checkbox" id="btn_@item.value.IdDescuento" @(item.value.Estado == 1 ? "checked" : "") @(item.value.TiSitu == "ANU" ? "disabled" : "")>
                            <label for="btn_@item.value.IdDescuento"></label>
                        </div>
                    }
                </div>
                <h1>@item.value.IdDescuento</h1>
                <h2>@(item.value.TipoDescuento == 1 ? "Descuento Fijo" : "Descuento Porcentual")</h2>
                <p>Desde: @(item.value.FechaInicio == DateTime.MinValue ? "NO APLICA" : item.value.FechaInicio.ToString("dd/MM/yyyy"))</p>
                <p>Hasta: @(item.value.FechaFin == DateTime.MinValue ? "NO APLICA" : item.value.FechaFin.ToString("dd/MM/yyyy"))</p>


                <div class="status-buttons">
                    @if (item.value.TiSitu != "APR" && item.value.TiSitu != "ANU")
                    {
                        <button class="btn-check" type="button" data-id="@item.value.IdDescuento" data-situ="APR" title="Activar">
                            ‚úîÔ∏è
                        </button>
                    }

                    @if (item.value.TiSitu != "APR" && item.value.TiSitu != "PAP")
                    {
                        <button class="btn-check" type="button" data-id="@item.value.IdDescuento" data-situ="PAP" title="Activar">
                            ‚úîÔ∏è
                        </button>
                    }

                    @if (item.value.TiSitu != "ANU")
                    {
                        <button class="btn-x" type="button" data-id="@item.value.IdDescuento" data-situ="ANU" title="Desactivar">
                            ‚ùå
                        </button>
                    }
                </div>

            </div>
        }
    </div>







</div>

<!-- Modal de agregar descuento -->
<div id="addDiscountModal" class="custom-modal">
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Agregar Descuento</h2>
        <form id="addDiscountForm" method="post">
            <div class="form-grid">
            <div class="form-group">
                <label for="FECHA_INICIO">Fecha Inicio:</label>
                <input type="date" id="FECHA_INICIO" name="FECHA_INICIO" required />
            </div>

            <div class="form-group">
                <label for="FECHA_FIN">Fecha Fin:</label>
                <input type="date" id="FECHA_FIN" name="FECHA_FIN" required />
            </div>

            <div class="form-group">
                <label for="discountType">Tipo de Descuento:</label>
                <select id="discountType" class="select-custom" name="TIPO_DESCUENTO" required>
                    <option value="" disabled selected>Seleccione un Tipo de Descuento</option>
                    <option value="1">Fijo</option>
                    <option value="0">Porcentual</option>
                </select>
            </div>

            <div class="form-group">
                <label for="discountValue">Precio de Descuento:</label>
                <input type="number" id="discountValue" name="PRECIO_DESCUENTO" required />
            </div>

            <div class="form-group">
                <label for="applyCategory">Aplicar Categor√≠a:</label>
                <select id="applyCategory" class="select-custom"  name="APLICAR_CATEGORIA" required>
                    <option value="" disabled selected>Seleccione una opci√≥n</option>
                    <option value="1">Categor√≠as</option>
                    <option value="0">Productos</option>
                </select>
            </div>

            @Html.AntiForgeryToken()
                <div id="categoryTableContainer" class="scrollable-table"></div>

                <button type="submit" class="styled-button">Guardar</button>
            </div>
        </form>

    </div>

</div>


<!-- Modal de detalles del descuento -->
<div id="detailsDiscountModal" class="custom-modal">
    <div class="modal-content">
        <span class="close-details-modal">&times;</span>
        <h2>Detalles del Descuento</h2>
        <div id="discount-details-content">
            <!-- DETALLES -->
        </div>
    </div>
</div>


<!-- FUNCIONES -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.discount-card').forEach(card => {
            card.addEventListener('click', function (event) {
                if (event.target.closest('input') || event.target.closest('button') || event.target.closest('label')) {
                    return;
                }

                const discountId = card.getAttribute('data-discount-id');

                fetch(`/Descuentos/DetallesDescuento/${discountId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Formatear los datos recibidos
                        const promocion = (data.idPromocion && Object.keys(data.idPromocion).length > 0)
                            ? JSON.stringify(data.idPromocion)
                            : 'NO APLICA';

                        const evento = (data.idEvento && Object.keys(data.idEvento).length > 0)
                            ? JSON.stringify(data.idEvento)
                            : 'NO APLICA';

                        const categorias = Array.isArray(data.categorias)
                            ? data.categorias
                            : JSON.parse(data.categorias || '[]');

                        const categoriasHTML = categorias.map(cat =>
                            `<tr>
                            <td>${cat.ID_CATEGORIA}</td>
                            <td>${cat.CATEGORIA}</td>
                        </tr>`
                        ).join('');

                        const productos = Array.isArray(data.productos)
                            ? data.productos
                            : JSON.parse(data.productos || '[]');

                        const productosHTML = productos.map(prod =>
                            `<tr>
                            <td>${prod.ID_PRODUCTO}</td>
                            <td>${prod.PROD_NOM}</td>
                            <td>${prod.DESCRIPCION}</td>
                            <td>${prod.PRECIO}</td>
                            <td>${prod.ESTADO === "1" ? "Activo" : "Inactivo"}</td>
                            <td>${prod.PRECIO_FINAL}</td>
                        </tr>`
                        ).join('');

                        // Insertar los detalles en el modal
                        document.getElementById('discount-details-content').innerHTML = `
                        <div>
                            <h3>Descuento: ${data.idDescuento}</h3>
                            <p>Promoci√≥n: ${promocion}</p>
                            <p>Evento: ${evento}</p>
                            <p>Desde: ${data.fechaInicio ? new Date(data.fechaInicio).toLocaleDateString() : 'NO APLICA'}</p>
                            <p>Hasta: ${data.fechaFin ? new Date(data.fechaFin).toLocaleDateString() : 'NO APLICA'}</p>
                            <p>
                                ${data.tipoDescuento == 1
                                ? `Descuento Fijo: S/. ${data.precioDescuento}`
                                : `Descuento Porcentual: ${data.precioDescuento}%`}
                            </p>
                            <p>TI_SITU: ${data.tI_SITU}</p>
                        </div>
                        <div style="display: flex; gap: 20px; margin-top: 20px;">
                            <div style="flex: 1;">
                                <h4>Categor√≠as</h4>
                                <div class="scrollable-container">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th>ID Categoria</th>
                                                <th>Categoria</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            ${categoriasHTML || `<tr><td colspan="2">No se encontraron categor√≠as</td></tr>`}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div style="flex: 1;">
                                <h4>Productos</h4>
                                <div class="scrollable-container">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th>ID Producto</th>
                                                <th>Producto</th>
                                                <th>Descripci√≥n</th>
                                                <th>Precio</th>
                                                <th>Estado</th>
                                                <th>Precio Final</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            ${productosHTML || `<tr><td colspan="5">No se encontraron productos</td></tr>`}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    `;

                        // Mostrar el modal con los detalles
                        document.getElementById('detailsDiscountModal').style.display = 'block';
                    });
            });
        });


        document.querySelector('.close-details-modal').addEventListener('click', function () {
            document.getElementById('detailsDiscountModal').style.display = 'none';
        });

        window.addEventListener('click', function (event) {
            if (event.target == document.getElementById('detailsDiscountModal')) {
                document.getElementById('detailsDiscountModal').style.display = 'none';
            }
        });

        document.querySelectorAll('.status-buttons button').forEach(button => {
            button.addEventListener('click', function () {
                const card = this.closest('.discount-card');
                const idDescuento = card.getAttribute('data-discount-id');
                const situ = this.getAttribute('data-situ');

                const formData = new FormData();
                formData.append('idDescuento', idDescuento);
                formData.append('situ', situ);

                fetch('/Descuentos/ActualizarSitu', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) {
                            return Promise.reject('Error al actualizar el estado.');
                        }
                        return response.text();
                    })
                    .then(message => {
                        alert(message);
                        location.reload();
                    })
                    .catch(error => {
                        console.error(error);
                        alert('No se pudo actualizar el estado. Intente nuevamente.');
                    });
            });
        });

        document.querySelector('.add-button').addEventListener('click', function () {
            document.getElementById('addDiscountModal').style.display = 'block';
        });

        document.querySelectorAll('.close-modal').forEach(closeButton => {
            closeButton.addEventListener('click', function () {
                document.getElementById('addDiscountModal').style.display = 'none';
            });
        });

        window.addEventListener('click', function (event) {
            if (event.target == document.getElementById('addDiscountModal')) {
                document.getElementById('addDiscountModal').style.display = 'none';
            }
        });

        document.getElementById('discountType').addEventListener('change', function () {
            var discountType = this.value;
            var discountLabel = document.getElementById('discountLabel');

            if (discountType === "1") {
                discountLabel.textContent = "Precio Descuento";
            } else {
                discountLabel.textContent = "Porcentaje de Descuento";
            }
        });




        document.getElementById('applyCategory').addEventListener('change', function () {
            var applyCategory = this.value;
            var tableContainer = document.getElementById('categoryTableContainer');
            tableContainer.innerHTML = ''; 

            if (applyCategory === "1") {
                fetchCategories();  
            } else {
                fetchProducts(); 
            }
        });

        function fetchCategories() {
            fetch('/Descuentos/ListarCategorias')
                .then(response => response.json())
                .then(data => {
                    var table = `
                            <table class="table table-bordered" style="background-color: #f8f9fa; border: 1px solid #333;">
                                <thead>
                                    <tr style="background-color: #e9ecef;">
                                        <th style="width: 10%;">Seleccionar</th>
                                        <th>Codigo</th>
                                        <th>Descripci√≥n</th>
                                    </tr>
                                </thead>
                                <tbody>
                        `;

                    data.forEach(category => {
                        table += `
                                <tr>
                                    <td>
                                        <label class="custom-checkbox">
                                                <input type="checkbox" class="productoCheckbox" data-producto-id="${category.ID_CATEGORIA}" name="ID_CATEGORIA" value="${category.ID_CATEGORIA}">
                                            <span class="checkmark"></span>
                                        </label>
                                    </td>
                                    <td>${category.ID_CATEGORIA}</td>
                                    <td>${category.DESCRIPCION}</td>
                                </tr>
                            `;
                    });

                    table += `</tbody></table>`;
                    document.getElementById('categoryTableContainer').innerHTML = table;
                })
                .catch(error => console.error('Error fetching categories:', error));
        }



        function fetchProducts() {
            fetch('/Descuentos/ListarProductos')
                .then(response => response.json())
                .then(data => {
                    var table = `
                            <table class="table table-bordered" style="background-color: #f8f9fa; border: 1px solid #333;">
                                <thead>
                                    <tr style="background-color: #e9ecef;">
                                        <th style="width: 10%;">Seleccionar</th>
                                        <th>Codigo</th>
                                        <th>Nombre</th>
                                        <th>Precio</th>
                                    </tr>
                                </thead>
                                <tbody>
                        `;

                    data.forEach(product => {
                        table += `
                                <tr>
                                    <td>
                                        <label class="custom-checkbox">
                                                <input type="checkbox" class="productoCheckbox" data-producto-id="${product.ID_PRODUCTO}" name="ID_ARTICULOS" value="${product.ID_PRODUCTO}">
                                            <span class="checkmark"></span>
                                        </label>
                                    </td>
                                    <td>${product.ID_PRODUCTO}</td>
                                    <td>${product.PROD_NOM}</td>
                                    <td>${product.PRECIO}</td>
                                </tr>
                            `;
                    });

                    table += `</tbody></table>`;
                    document.getElementById('categoryTableContainer').innerHTML = table;
                })
                .catch(error => console.error('Error fetching products:', error));
        }

        const form = document.getElementById('addDiscountForm');

        form.addEventListener('submit', function (event) {
        event.preventDefault();


        const formData = new FormData(form);

        const data = {};
        formData.forEach((value, key) => {
            
            if (data[key]) {
                data[key] += `,${value}`;
            } else {
                data[key] = value;
            }
        });

        const defaultValues = {
            "ID_ARTICULOS": "",  
            "ID_CATEGORIA": ""   
        };

        for (let key in defaultValues) {
            if (!data.hasOwnProperty(key)) {
                data[key] = defaultValues[key];
            }
        }

        delete data['__RequestVerificationToken'];  
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;


        fetch('RegistrarDescuento', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', 
                'RequestVerificationToken': token 
            },
            credentials: 'include', 
            body: JSON.stringify(data)  
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al registrar el descuento.');
            }
            return response.text();
        })
        .then(message => {
            location.reload();
        })
        .catch(error => {
            console.error(error);
            alert('Hubo un error al procesar la solicitud.');
        });
    });

        document.querySelectorAll('.toggle input[type="checkbox"], .toggle label').forEach(toggle => {
            toggle.addEventListener('change', function () {
                const isChecked = this.checked;
                const idDescuento = this.closest('.discount-card').getAttribute('data-discount-id');

                console.log(`ID Descuento: ${idDescuento}`);

                fetch(`/Descuentos/activar-descuento/${idDescuento}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value // Token CSRF
                    },
                    body: JSON.stringify({
                        idDescuento: idDescuento
                    })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error al actualizar el estado del descuento');
                        }
                        return response.json();
                    })
                    .then(data => {
                        alert(data.message || 'Estado actualizado correctamente');
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Hubo un error al actualizar el estado.');
                    });
            });
        });

    });
</script>

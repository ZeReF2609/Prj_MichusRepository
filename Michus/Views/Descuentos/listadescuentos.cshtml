@model IEnumerable<Michus.Models.pa_lista_descuento_carta>

@{
    ViewData["Title"] = "Lista de Descuentos";
}

<link rel="stylesheet" href="~/assets/css/DescuentoStyle.css">

<div class="discount-manager">
    <div class="add-button-container">
        <button class="add-button open-modal">+</button>
    </div>

    <h1>Gestor de Descuentos</h1>

    @using (Html.BeginForm("listadescuentos", "Descuentos", FormMethod.Get))
    {
        <div class="nav nav-tabs" id="nav-tab" role="tablist">

            <a class="nav-link @(ViewBag.TiSitu == "PAP" ? "active pre-aprobados" : "")"
               href="@Url.Action("listadescuentos", "Descuentos", new { TI_SITU = "PAP", FECHA_INICIO = ViewBag.FechaInicio, FECHA_FIN = ViewBag.FechaFin })">
                Pre-Aprobados
            </a>

            <a class="nav-link @(ViewBag.TiSitu == "APR" ? "active aprobados" : "")"
               href="@Url.Action("listadescuentos", "Descuentos", new { TI_SITU = "APR", FECHA_INICIO = ViewBag.FechaInicio, FECHA_FIN = ViewBag.FechaFin })">
                Aprobados
            </a>

            <a class="nav-link @(ViewBag.TiSitu == "ANU" ? "active eliminados" : "")"
               href="@Url.Action("listadescuentos", "Descuentos", new { TI_SITU = "ANU", FECHA_INICIO = ViewBag.FechaInicio, FECHA_FIN = ViewBag.FechaFin })">
                Eliminados
            </a>
        </div>

        <div class="filters">
            @Html.DropDownList("FECHA_INICIO", (SelectList)ViewBag.AniosInicioDesc, "FECHA INICIO", new { @class = "form-select" })
            <br />

            @Html.DropDownList("FECHA_FIN", (SelectList)ViewBag.AniosFinDesc, "FECHA FIN", new { @class = "form-select" })
            <br />
            <button class="filter-button" type="submit">üîç</button>
        </div>
    }



    <div class="discount-cards">
        @foreach (var item in Model.Select((value, index) => new { value, index }))
        {
            <div class="discount-card" data-modal-id="modal_@item.index" data-discount-id="@item.value.IdDescuento">
                <div class="discount-header">
                    <span class="discount-badge">
                        @if (item.value.TipoDescuento == 1)
                        {
                            @($"s/. {item.value.PrecioDescuento}")
                        }
                        else
                        {
                            @($"{item.value.PrecioDescuento}%")
                        }
                    </span>

                    @if (item.value.TiSitu != "PAP" && item.value.TiSitu != "ANU")
                    {
                        <div class="toggle">
                            <input type="checkbox" id="btn_@item.value.IdDescuento" @(item.value.Estado == 1 ? "checked" : "") @(item.value.TiSitu == "ANU" ? "disabled" : "")>
                            <label for="btn_@item.value.IdDescuento"></label>
                        </div>
                    }
                </div>
                <h1>@item.value.IdDescuento</h1>
                <h2>@(item.value.TipoDescuento == 1 ? "Descuento Fijo" : "Descuento Porcentual")</h2>
                <p>Desde: @(item.value.FechaInicio == DateTime.MinValue ? "NO APLICA" : item.value.FechaInicio.ToString("dd/MM/yyyy"))</p>
                <p>Hasta: @(item.value.FechaFin == DateTime.MinValue ? "NO APLICA" : item.value.FechaFin.ToString("dd/MM/yyyy"))</p>


                <div class="status-buttons">
                    @if (item.value.TiSitu != "APR" && item.value.TiSitu != "ANU")
                    {
                        <button class="btn-check" type="button" data-id="@item.value.IdDescuento" data-situ="APR" title="Activar">
                            ‚úîÔ∏è
                        </button>
                    }

                    @if (item.value.TiSitu != "ANU")
                    {
                        <button class="btn-x" type="button" data-id="@item.value.IdDescuento" data-situ="ANU" title="Desactivar">
                            ‚ùå
                        </button>
                    }
                </div>

            </div>
        }
    </div>







</div>

<!-- Modal de agregar descuento / POR HACER -->
<div id="addDiscountModal" class="custom-modal">
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Agregar Descuento</h2>
            <!-- Aqu√≠ van los campos para agregar el descuento -->
        <button class="close-modal">Cerrar</button>
    </div>
</div>

<!-- Modal de detalles del descuento -->
<div id="detailsDiscountModal" class="custom-modal">
    <div class="modal-content">
        <span class="close-details-modal">&times;</span>
        <h2>Detalles del Descuento</h2>
        <div id="discount-details-content">
            <!-- Aqu√≠ se mostrar√°n los detalles del descuento -->
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.discount-card').forEach(card => {
            card.addEventListener('click', function (event) {
                if (event.target.closest('input[type="checkbox"]') || event.target.closest('button')) {
                    return;
                }

                const discountId = card.getAttribute('data-discount-id');

                fetch(`/Descuentos/GetDetallesDescuento/${discountId}`)
                    .then(response => response.json())
                    .then(data => {
                        const promocion = (data.idPromocion && Object.keys(data.idPromocion).length > 0)
                            ? JSON.stringify(data.idPromocion)
                            : 'NO APLICA';

                        const evento = (data.idEvento && Object.keys(data.idEvento).length > 0)
                            ? JSON.stringify(data.idEvento)
                            : 'NO APLICA';

                        /* CATEGORIAS */
                        const categorias = Array.isArray(data.categorias)
                            ? data.categorias
                            : JSON.parse(data.categorias || '[]');

                        const categoriasHTML = categorias.map(cat => `
                            <tr>
                                <td>${cat.ID_CATEGORIA}</td>
                                <td>${cat.CATEGORIA}</td>
                            </tr>
                        `).join('');

                        /* PRODUCTOS */
                        const productos = Array.isArray(data.productos)
                            ? data.productos
                            : JSON.parse(data.productos || '[]');

                        const productosHTML = productos.map(prod => `
                            <tr>
                                <td>${prod.ID_PRODUCTO}</td>
                                <td>${prod.PROD_NOM}</td>
                                <td>${prod.DESCRIPCION}</td>
                                <td>${prod.PRECIO}</td>
                                <td>${prod.ESTADO === "1" ? "Activo" : "Inactivo"}</td>
                                <td>${prod.PRECIO_FINAL}</td>
                            </tr>
                        `).join('');

                        // Renderizar el contenido
                        document.getElementById('discount-details-content').innerHTML = `
                            <div>
                                <h3>Descuento: ${data.idDescuento}</h3>
                                <p>Promoci√≥n: ${promocion}</p>
                                <p>Evento: ${evento}</p>
                                <p>Desde: ${data.fechaInicio ? new Date(data.fechaInicio).toLocaleDateString() : 'NO APLICA'}</p>
                                <p>Hasta: ${data.fechaFin ? new Date(data.fechaFin).toLocaleDateString() : 'NO APLICA'}</p>
                                <p>
                                    ${data.tipoDescuento == 1
                                ? `Descuento Fijo: S/. ${data.precioDescuento}`
                                : `Descuento Porcentual: ${data.precioDescuento}%`
                            }
                                </p>
                                <p>TI_SITU: ${data.tI_SITU}</p>
                            </div>
                            <div style="display: flex; gap: 20px; margin-top: 20px;">
                                <div style="flex: 1;">
                                    <h4>Categor√≠as</h4>
                                    <div class="scrollable-container">
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>ID Categoria</th>
                                                    <th>Categoria</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                ${categoriasHTML || `<tr><td colspan="2">No se encontraron categor√≠as</td></tr>`}
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div style="flex: 1;">
                                    <h4>Productos</h4>
                                    <div class="scrollable-container">
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>ID Producto</th>
                                                    <th>Producto</th>
                                                    <th>Descripci√≥n</th>
                                                    <th>Precio</th>
                                                    <th>Estado</th>
                                                    <th>Precio Final</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                ${productosHTML || `<tr><td colspan="5">No se encontraron productos</td></tr>`}
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        `;

                        
                        document.getElementById('detailsDiscountModal').style.display = 'block';
                    });
            });
        });

        // CERRAR EL MODAL CON EL X
        document.querySelector('.close-details-modal').addEventListener('click', function () {
            document.getElementById('detailsDiscountModal').style.display = 'none';
        });

        // SEGUNDA OPCION DE CERRAR EL MODEL AL CLICKEAR AFUERA
        window.addEventListener('click', function (event) {
            if (event.target == document.getElementById('detailsDiscountModal')) {
                document.getElementById('detailsDiscountModal').style.display = 'none';
            }
        });


        // BOTON PARA CAMBIAR EL TI_SITU (temporal)
        document.querySelectorAll('.status-buttons button').forEach(button => {
            button.addEventListener('click', function () {
                
                const card = this.closest('.discount-card');
                const idDescuento = card.getAttribute('data-discount-id');
                const situ = this.getAttribute('data-situ');

                const formData = new FormData();
                formData.append('idDescuento', idDescuento);
                formData.append('situ', situ);

                fetch(`/Descuentos/ActualizarSitu`, {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) {
                            return Promise.reject('Error al actualizar el estado.');
                        }
                        return response.text();
                    })
                    .then(message => {
                        alert(message);
                        location.reload();
                    })
                    .catch(error => {
                        console.error(error);
                        alert('No se pudo actualizar el estado. Intente nuevamente.');
                    });
            });
        });

    });

</script>

